= はじめに =
ブロックストレージサービスであるCinder を構築していきます。
利用可能なドライバとして、NAS/SAN, NFS, iSCSi, Ceph などがあります。

; Cinder Installation Guide
: https://docs.openstack.org/cinder/yoga/install/

== Cinder ブロックストレージの概要 ==
; Cinder Block Storage service overview
: https://docs.openstack.org/cinder/yoga/install/get-started-block-storage.html

* cinder-api
API リクエストを受け付け、`cinder-volume` へ奏者処理のため転送します。

* cinder-volume
<code>cinder-scheduler</code> プロセスや、Block Storage サービスと直接対話します。
また、これらのプロセスとメッセージキューを介しても、対話します。
<code>cinder-volume</code> サービスは、Block Storage サービスの読み書き状態を管理する責任を持ちます。
これは、ドライバアーキテクチャを介して、様々なストレージプロバイダーと通信することができます。

* cinder-scheduler daemon
ボリュームを作成するオプショナルストレージプロバイダーノードを選択します。
<code>nova-scheduler</code> と似たコンポーネントです。

* cinder-backup daemon
ボリュームを様々なタイプのバックアップストレージプロバイダーへバックアップを行います。
<code>cinder-volume</code サービスのように、ドライバアーキテクチャを通して様々なストレージと通信することができます。

* Messaging queue
Block Storage プロセスとの間で、情報を転送します。

== デフォルトボリュームタイプ ==
Train リリースから、書くボリュームは<code>volume_type</code> が必要になりました。
それによって、<code>default_volume_type</code> が設定されている必要があります。<br /><br />

システム定義の<code>__DEFAULT__</code> が、作成されますが、これはインストール時にDB 上に作成されるもので、<code>default_volume_type</code> 設定の値が設定されます。<br /><br />

<code>__DEFAULT__</code> はボリューム作成/削除の時に、デフォルトの設定値として利用されますが、場合によっては、それを望まないことがあるかもしれません。
すなわち、<code>__DEFAULT__</code> を削除したいと感じることがあるかもしれませんが、削除しようとするとき、下記のような成約があります。

* もし<code>__DEFAULT__</code> が,code>default_volume-type</code> の設定値であった場合、削除することはできません。これを防止するためには、異なる設定値を作成する必要があります
* もし<code>__DEFAULT__</code> な配備済みなボリュームがある場合、削除することはできません。これを防止するためには、それらのボリュームを他のボリュームタイプで再作成する必要があります。

= Ubuntu にCinder をインストールする =
Ubuntu にCinder をインストールする手順を説明していきます。
今回は、手順を簡略化するために、対象のボリュームには、何も保存されていない状態を仮定します。
また、キャラクタデバイスとして<code>/dev/sdb</code> を使っていきますが、適宜環境に応じて読み替えて下さい。

; Cinder Installation Guide for Ubuntu
: https://docs.openstack.org/cinder/yoga/install/index-ubuntu.html

== controller ノードのインストールと設定 ==

<syntaxhighlight lang="text">
openstack-controller-node01 ~# mysql
MariaDB [(none)]> CREATE DATABASE cinder;
MariaDB [(none)]> GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED BY 'secret';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' IDENTIFIED BY 'secret';
MariaDB [(none)]> quit
</syntaxhighlight>

<syntaxhighlight lang="console">
openstack-controller-node01 ~# . ./admin-openrc

openstack-controller-node01 ~# # cinder ユーザを作成する
openstack-controller-node01 ~# openstack user create --domain default --password secret cinder
openstack-controller-node01 ~# # cinder ユーザにadmin ロールを追加する
openstack-controller-node01 ~# openstack role add --project service --user cinder admin
openstack-controller-node01 ~# # cinderv3 サービスエンティティを作成する
openstack-controller-node01 ~# openstack service create --name cinderv3 --description "OpenStack Block Storage" volumev3
</syntaxhighlight>

補足: Xena リリースから、Block Storage サービスは、1 つだけのエンティティを必要とします。

== Block Storage サービスAPI エンドポイント ==
Block Storage サービスAPI エンドポイントを作成します。

<syntaxhighlight lang="console">
openstack-controller-node01 ~# openstack endpoint create --region RegionOne volumev3 public http://dev-controller01:8776/v3/%\(project_id\)s
openstack-controller-node01 ~# openstack endpoint create --region RegionOne volumev3 internal http://dev-controller01:8776/v3/%\(project_id\)s
openstack-controller-node01 ~# openstack endpoint create --region RegionOne volumev3 admin http://dev-controller01:8776/v3/%\(project_id\)s
</syntaxhighlight>

== コンポーネントのインストール ==

<syntaxhighlight lang="console">
openstack-controller-node01 ~# apt-get install cinder-api cinder-scheduler
</syntaxhighlight>

<code>/etc/cinder/cinder.conf</code> ファイルを編集します。

* /etc/cinder/cinder.conf
<syntaxhighlight lang="text">
[DEFAULT]
# ...
transport_url = rabbit://openstack:secret@dev-controller01
auth_strategy = keystone
my_ip = 192.168.2.71

[database]
# ...
connection = mysql+pymysql://cinder:secret@dev-controller01/cinder

[keystone_authtoken]
www_authenticate_uri = http://dev-controller01:5000
auth_url = http://dev-controller01:5000
memcached_servers = dev-controller01:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = cinder
password = secret

[oslo_concurrency]
lock_path = /var/lib/cinder/tmp
</syntaxhighlight>

補足: my_ip には、controller ノードのmanagement インタフェースのIP を指定してください。

* /etc/nova/nova.conf
<syntaxhighlight lang="text">
[cinder]
os_region_name = RegionOne
</syntaxhighlight>

== インストール後処理 ==
<syntaxhighlight lang="console">
openstack-controller-nodeXX ~# systemctl restart openstack-nova-api.service
</syntaxhighlight>

= ストレージノードのインストールと設定 =

; Install and configure a storage node
: https://docs.openstack.org/cinder/yoga/install/cinder-storage-install-obs.html

LVM のfilter を設定します。
今回は、Cinder ノードのみがLVM を持っている想定で設定します。
Compute ノードもLVM がOS システム領域として使われている場合、設定する必要がありますが、今回は使っていない想定で割愛します。

* /etc/lvm/lvm.conf
<syntaxhighlight lang="console">
</syntaxhighlight>

