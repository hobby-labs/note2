= Swift のインストール =
; ceph : BLOCK DEVICES AND OPENSTACK
: https://docs.ceph.com/en/latest/rbd/rbd-openstack/

; RedHat : Chapter 3. Configuring OpenStack to Use Ceph
: https://access.redhat.com/documentation/en-us/red_hat_ceph_storage/2/html/ceph_block_device_to_openstack_guide/configuring_openstack_to_use_ceph

; Configuring the Block (cinder) storage service (optional)
: https://docs.openstack.org/openstack-ansible-os_cinder/zed/configure-cinder.html

; Ceph Quincy : Configure Cluster #1
: https://www.server-world.info/en/note?os=Ubuntu_22.04&p=ceph&f=1

Cinder のバックエンドとしてCeph を使う設定について説明していきます。
ここでは、下記の3 ノードをCeph クラスタとして使っていきます。
下記と同様の定義を、各ノードの/etc/hosts に設定してください。

* /etc/hosts @ dev-storage01, dev-storage02, dev-storage03
<syntaxhighlight lang="text">
172.22.1.101 dev-storage01 dev-storage01.openstack.example.com
172.22.1.102 dev-storage02 dev-storage02.openstack.example.com
172.22.1.103 dev-storage03 dev-storage03.openstack.example.com
</syntaxhighlight>


== Ceph バックエンド ==
OpenStack のCinder では、Ceph のブロックデバイスをバックエンドとして、取り付けることができます。
Ceph はブロックボリュームを複数のOSD(Object Storage Daemon) に分散できるため、高い性能が期待できます。<br /><br />

Ceph をバックエンドとして利用するために、<code>libvirtd</code> をインストールする必要があります。<br /><br />

OpenStack はCeph をバックエンドにすることでImage サービス、Volume(Cinder)、ゲストディスクを統合することができますが、ここではVolume(Cinder)について、説明していきます。

== Ceph のSSH 認証設定 ==
Ceph cluster 内で、使用するSSH 公開鍵を作成します。
代表して、dev-storage01 で作成します。

* dev-storage01
<syntaxhighlight lang="console">
dev-storage01 # ssh-keygen -q -N "" -f ~/.ssh/ceph_cluster
</syntaxhighlight>

公開鍵の内容を表示します。

* dev-storage01
<syntaxhighlight lang="console">
dev-storage01 # cat ~/.ssh/ceph_cluster.pub
${CONTENT_OF_PUBLIC_KEY}
</syntaxhighlight>

この公開鍵の内容を、各Ceph ノードのroot ユーザの<code>~/.ssh/authorized_keys</code> に追加してください。

* dev-storage01,02,03
<syntaxhighlight lang="console">
dev-storage{01,02,03} # echo ${CONTENT_OF_PUBLIC_KEY} ~/.ssh/authorized_keys
</syntaxhighlight>

SSH クライアント設定ファイルを作成します。

* ~/.ssh/config @ dev-storage01
<syntaxhighlight lang="console">
dev-storage01 # cat << EOF > ~/.ssh/config
Host dev-storage* dev-storage*.openstack.example.com
    PreferredAuthentications publickey
    User root
    IdentityFile ~/.ssh/ceph_cluster
EOF

dev-storage01 # chmod 600 ~/.ssh/config
</syntaxhighlight>

この情報を各ノードにコピーします。

<syntaxhighlight lang="console">
dev-storage01 # for i in 02 03; do
    scp ~/.ssh/config dev-storage${i}:.ssh/config
    ssh dev-storage${i} -- chmod 600 ~/.ssh/config
done
</syntaxhighlight>

== Ceph をインストールする ==

* dev-storage01
<syntaxhighlight lang="console">
dev-storage01 # for i in 01 02 03
do
    ssh dev-storage${i} "apt update; apt -y install ceph"
done
</syntaxhighlight>

== 管理ノードでMonitor daemon とManager daemon を設定する ==

<syntaxhighlight lang="console">
dev-storage01 # uuidgen
ffffffff-ffff-ffff-ffff-ffffffffffff
</syntaxhighlight>

* /etc/ceph/ceph.conf
<syntaxhighlight lang="text">
[global]
# specify cluster network for monitoring
cluster network = 172.22.0.0/16
# specify public network
public network = 172.22.0.0/16

# specify UUID genarated above
fsid = ffffffff-ffff-ffff-ffff-ffffffffffff
# specify IP address of Monitor Daemon
mon host = 172.22.1.101
# specify Hostname of Monitor Daemon
mon initial members = dev-storage01
osd pool default crush rule = -1

# mon.(Node name)
[mon.node01]
# specify Hostname of Monitor Daemon
host = dev-storage01
# specify IP address of Monitor Daemon
mon addr = 172.22.1.101
# allow to delete pools
mon allow pool delete = true
</syntaxhighlight>

クラスタの監視のための秘密鍵を生成します。

* dev-storage01
<syntaxhighlight lang="console">
dev-storage01 # ceph-authtool --create-keyring /etc/ceph/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
</syntaxhighlight>

クラスタ管理のための秘密鍵を作成します。

* dev-storage01
<syntaxhighlight lang="console">
dev-storage01 # ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
</syntaxhighlight>

起動のための秘密鍵を作成します。
<syntaxhighlight lang="console">
dev-storage01 # ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'
</syntaxhighlight>

作成された鍵をインポートします。



== Pool を作成する ==
デフォルトで、Ceph ブロックデバイスは<code>rbd</code> プールに入っています。
Ceph のプール名を指定することで、それ使うことができますが、ここでは新しくプールを作成することにします。

