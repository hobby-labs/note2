```
mkdir -p $HOME/cloud-image-ubuntu-from-scratch
cd $HOME/cloud-image-ubuntu-from-scratch
dd if=/dev/zero of=cloud-ubuntu-image.raw bs=1 count=0 seek=32212254720 status=progress
```

```
sgdisk -z cloud-ubuntu-image.raw
timeout 10 dd if=/dev/zero of=cloud-ubuntu-image.raw bs=4M
sgdisk -n 1:0:+512M -t 1:ef00 -c 1:"EFI System" cloud-ubuntu-image.raw
sgdisk -n 2:0:+512M -t 2:8300 -c 2:"Linux filesystem" cloud-ubuntu-image.raw
sgdisk -n 3:0: -t 3:8300 -c 3:"Linux filesystem" cloud-ubuntu-image.raw
```

```
sudo losetup -fP cloud-ubuntu-image.raw
sudo losetup -a | grep cloud-ubuntu-image.raw
> /dev/loop3: [64769]:201335002 (/root/cloud-image-ubuntu-from-scratch/cloud-ubuntu-image.raw)
```

In this example, the loop device was created as /dev/loop3.
Set the variable L_DEV=/dev/loop3.

```
L_DEV=/dev/loop3
```

```
sudo gdisk -l ${L_DEV}
> ...
> Number  Start (sector)    End (sector)  Size       Code  Name
>    1            2048         1050623   512.0 MiB   EF00  EFI System
>    2         1050624         2099199   512.0 MiB   8300  Linux filesystem
>    3         2099200        54237190   24.9 GiB    8E00  Linux LVM

ls -l ${L_DEV}*
> brw-rw---- 1 root disk   7, 4 Mar 18 14:46 /dev/loop3
> brw-rw---- 1 root disk 259, 0 Mar 18 14:46 /dev/loop3p1
> brw-rw---- 1 root disk 259, 1 Mar 18 14:46 /dev/loop3p2
> brw-rw---- 1 root disk 259, 2 Mar 18 14:46 /dev/loop3p3
```

```
mkfs.vfat -F32 ${L_DEV}p1
mkfs.ext4 ${L_DEV}p2
mkfs.xfs ${L_DEV}p3

cd $HOME/cloud-image-ubuntu-from-scratch
mkdir -p chroot
sudo mount ${L_DEV}p3 chroot
sudo mkdir -p chroot/boot
sudo mount ${L_DEV}p2 chroot/boot
sudo mkdir -p chroot/boot/efi
sudo mount ${L_DEV}p1 chroot/boot/efi
```

```
sudo debootstrap \
   --arch=amd64 \
   --variant=minbase \
   --components "main,universe" \
   --include "ca-certificates,cron,iptables,isc-dhcp-client,libnss-myhostname,ntp,ntpdate,rsyslog,ssh,sudo,dialog,whiptail,man-db,curl,dosfstools,e2fsck-static" \
   jammy \
   $HOME/cloud-image-ubuntu-from-scratch/chroot \
   http://jp.archive.ubuntu.com/ubuntu/
```

```
sudo mount --rbind /dev $HOME/cloud-image-ubuntu-from-scratch/chroot/dev
sudo mount --rbind /run $HOME/cloud-image-ubuntu-from-scratch/chroot/run
sudo mount --rbind /sys $HOME/cloud-image-ubuntu-from-scratch/chroot/sys
sudo mount --rbind /proc $HOME/cloud-image-ubuntu-from-scratch/chroot/proc
```

```
sudo chroot $HOME/cloud-image-ubuntu-from-scratch/chroot /usr/bin/env L_DEV=${L_DEV} /bin/bash --login
```

```
export HOME=/root
export LC_ALL=C
echo "anonymous" > /etc/hostname
```

```
cat << EOF > /etc/apt/sources.list
deb http://jp.archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
deb-src http://jp.archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse

deb http://jp.archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse
deb-src http://jp.archive.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse

deb http://jp.archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
deb-src http://jp.archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
EOF
```

```
blkid ${L_DEV}*
> /dev/loop4: PTUUID="84e6f1ee-62c5-4743-80e8-941a4b545868" PTTYPE="gpt"
> /dev/loop4p1: UUID="AE87-41C0" BLOCK_SIZE="512" TYPE="vfat" PARTLABEL="EFI System" PARTUUID="f8d3820c-fd56-4ab8-915c-25c22f6f33a0"
> /dev/loop4p2: UUID="be1aa9b1-f9b1-4c0f-a6e4-d2cdc46733d3" BLOCK_SIZE="4096" TYPE="ext4" PARTLABEL="Linux filesystem" PARTUUID="fbb44b48-dddd-465d-b15b-265654ff8280"
> /dev/loop4p3: UUID="abfe1520-27fb-4d70-9085-8ff43c9a3cdd" BLOCK_SIZE="512" TYPE="xfs" PARTLABEL="Linux filesystem" PARTUUID="09bcfd08-77cf-410e-aef8-510daa22fc27"
```

```
cat << EOF > /etc/fstab
UUID="abfe1520-27fb-4d70-9085-8ff43c9a3cdd" / xfs rw,relatime,attr2,inode64,logbufs=8,logbsize=32k,noquota        0 1
UUID="be1aa9b1-f9b1-4c0f-a6e4-d2cdc46733d3" /boot ext4 rw,relatime     0 2
UUID="AE87-41C0"       /boot/efi       vfat    rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro   0 2
EOF
```

```
apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y systemd-sysv
```

```
dbus-uuidgen > /etc/machine-id
ln -fs /etc/machine-id /var/lib/dbus/machine-id
```

```
dpkg-divert --local --rename --add /sbin/initctl
ln -s /bin/true /sbin/initctl
```

```
DEBIAN_FRONTEND=noninteractive apt-get install -y \
    xfsprogs os-prober ifupdown \
    network-manager resolvconf locales \
    build-essential module-assistant cloud-init \
    grub2 grub-pc linux-generic
```

```
cat <<EOF > /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback
EOF
```

Set locale.

```
# https://serverfault.com/a/689947
echo "Asia/Tokyo" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata

sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
sed -i -e 's/# ja_JP.UTF-8 UTF-8/ja_JP.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG=en_US.UTF-8
```

```
dpkg-reconfigure resolvconf -f noninteractive
```

```
cat <<EOF > /etc/NetworkManager/NetworkManager.conf
[main]
rc-manager=resolvconf
plugins=ifupdown,keyfile
dns=default

[ifupdown]
managed=false
EOF
```

```
dpkg-reconfigure network-manager -f noninteractive
```

```
# See: https://forums.gentoo.org/viewtopic-t-1118994-start-0.html
apt-get install -y grub-efi zynaddsubfx
#####in make.conf
#export GRUB_PLATFORMS="efi-64"
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu --boot-directory=/boot/efi/EFI --recheck
#update-grub
grub-mkconfig -o /boot/efi/EFI/ubuntu/grub.cfg
update-initramfs -u
```

```
useradd ubuntu
usermod -aG sudo ubuntu
passwd ubuntu
```

Finished to prepare resources for the cloud image.
Following this instruction, we will create the cloud image(qcow2) from the raw image.

```
truncate -s 0 /etc/machine-id
rm /sbin/initctl
dpkg-divert --rename --remove /sbin/initctl

apt-get clean
rm -rf /tmp/* ~/.bash_history
export HISTSIZE=0
exit
```

Chroot environment was finished.

```
sudo mount --make-rslave $HOME/cloud-image-ubuntu-from-scratch/chroot/
sudo umount -R $HOME/cloud-image-ubuntu-from-scratch/chroot/

sudo losetup -D
```

Convert raw to qcow2.

```
qemu-img convert -f raw cloud-ubuntu-image.raw -O qcow2 ubuntu-image.qcow2
```

---------------------------------------------------
# Launch the image.
mkdir -p /var/kvm/distros/qemu-ubuntu01/
cp /home/tsutomu/Downloads/ubuntu-image.qcow2 /var/kvm/distros/qemu-ubuntu01/
virt-install \
    --name qemu-ubuntu01 --boot uefi --import \
    --connect=qemu:///system --vcpus=2 --memory 16384 \
    --disk path=/var/kvm/distros/qemu-ubuntu01/ubuntu-image.qcow2 \
    --os-variant=ubuntu22.04 --arch x86_64 \
    --network bridge:br0,mac=52:54:00:00:00:10 \
    --graphics vnc,port=5902,listen=127.0.0.1,password=changeme
virsh destroy qemu-ubuntu01; virsh undefine qemu-ubuntu01 --nvram; rm -rf /var/kvm/distros/qemu-ubuntu01/

---------------------------------------------------

```
grub> ls
> (proc) (memdisk) (hd0) (hd0,gpt3) (ht0,gpt2) (hd0,gpt1) (lvm/lvm--vg01-lvm--vg01--root) (lvm/lvm--vg01-lvm--vg01--log)

grub> ls -l (hd0,gpt2)/
> ...
> vmlinuz-5.15-0-101-generic
> initrd.img-5.15.0-101-generic
> ...

grub> insmod lvm
grub> ##set root=(lvm/lvm--vg01-lvm--vg01--root)
grub> ##linux (hd0,gpt2)/vmlinuz-5.15.0-101-generic root=/dev/mapper/lvm--vg01-lvm--vg01--root
grub> linux (hd0,gpt2)/vmlinuz-5.15.0-101-generic root=UUID=05d7611d-e724-44d1-8ea7-bc64babadbcb
grub> initrd (hd0,gpt2)/initrd.img-5.15.0-101-generic
grub> boot
```

